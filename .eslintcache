[{"C:\\Users\\RenanFerreiradeSanta\\Documents\\GitHub\\Learning\\React\\built-from-scratch\\src\\index.tsx":"1","C:\\Users\\RenanFerreiradeSanta\\Documents\\GitHub\\Learning\\React\\built-from-scratch\\src\\components\\App.tsx":"2"},{"size":590,"mtime":1649701847088,"results":"3","hashOfConfig":"4"},{"size":87,"mtime":1649701965101,"results":"5","hashOfConfig":"6"},{"filePath":"7","messages":"8","suppressedMessages":"9","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13b0vjf",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vywc9x","C:\\Users\\RenanFerreiradeSanta\\Documents\\GitHub\\Learning\\React\\built-from-scratch\\src\\index.tsx",["13","14"],["15"],"C:\\Users\\RenanFerreiradeSanta\\Documents\\GitHub\\Learning\\React\\built-from-scratch\\src\\components\\App.tsx",[],[],{"ruleId":"16","severity":2,"message":"17","line":10,"column":13,"nodeType":"18","messageId":"19","endLine":10,"endColumn":34},{"ruleId":"20","severity":2,"message":"21","line":10,"column":13,"nodeType":"18","messageId":"22","endLine":10,"endColumn":34},{"ruleId":"23","severity":1,"message":"24","line":10,"column":24,"nodeType":"25","messageId":"26","endLine":10,"endColumn":27,"suggestions":"27","suppressions":"28"},"@typescript-eslint/no-unsafe-member-access","Unsafe member access .hello on an `any` value.","MemberExpression","unsafeMemberExpression","@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","unsafeCall","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["29","30"],["31"],{"messageId":"32","fix":"33","desc":"34"},{"messageId":"35","fix":"36","desc":"37"},{"kind":"38","justification":"39"},"suggestUnknown",{"range":"40","text":"41"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"40","text":"42"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","directive","",[500,503],"unknown","never"]